import streamlit as st
import joblib
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from nltk.stem import SnowballStemmer
import re

# T√©l√©charger les ressources NLTK n√©cessaires
nltk.download('punkt')
nltk.download('stopwords')

# Dictionnaire de mots n√©gatifs en fran√ßais avec leurs poids
FRENCH_NEGATIVE_WORDS = {
    'd√©teste': 5, 'haine': 5, 'ha√Ør': 5, 'm√©chant': 5, 'mechant': 5, 'm√©chante': 5, 'mechante': 5,
    'horrible': 4, 'terrible': 4, '√©nerv√©': 4, 'f√¢ch√©': 4, 'triste': 3, 'd√©√ßu': 3, 'd√©sol√©': 3,
    'malheureux': 3, 'd√©sagr√©able': 3, 'insupportable': 4, 'insatisfait': 3, 'd√©go√ªt√©': 4,
    'd√©plaisant': 3, 'd√©sesp√©r√©': 4, 'd√©solant': 3, 'd√©sastreux': 4, 'catastrophique': 4,
    'affreux': 4, 'atroce': 4, '√©pouvantable': 4, 'ex√©crable': 4, 'odieux': 4, 'd√©testable': 4,
    'abominable': 4, 'horripilant': 4, 'exasp√©rant': 4, 'aga√ßant': 3, '√©nervant': 3,
    'irritant': 3, 'f√¢cheux': 3, 'regrettable': 3, 'd√©cevant': 3, 'd√©plorable': 3,
    'pitoyable': 3, 'm√©diocre': 3, 'nul': 3, 'pourri': 4, 'merdique': 4, 'd√©gueulasse': 4,
    'infect': 4, 'immondice': 4, 'salet√©': 4, 'ordure': 4, 'crapule': 4, 'salaud': 4,
    'connard': 4, 'imb√©cile': 3, 'idiot': 3, 'stupide': 3, 'cr√©tin': 3, 'abruti': 3,
    'd√©bile': 3, 'con': 3, 'niais': 3, 'b√™te': 3, 'malin': 3, 'malicieux': 3,
    'perfide': 4, 'tra√Ætre': 4, 'fourbe': 4, 'hypocrite': 4, 'menteur': 4, 'trompeur': 4,
    'dangereux': 4, 'mena√ßant': 4, 'agressif': 4, 'violent': 4, 'brutal': 4, 'cruel': 4,
    'sadique': 4, 'm√©prisable': 4, 'ignoble': 4, 'vile': 4, 'bas': 3, 'l√¢che': 4,
    'peureux': 3, 'faible': 3, 'incomp√©tent': 3, 'incapable': 3, 'inutile': 3,
    'inutilit√©': 3, 'rat√©': 3, '√©chec': 3, 'perdu': 3, 'd√©sastre': 4, 'catastrophe': 4,
    'calamit√©': 4, 'malheur': 4, 'trag√©die': 4, 'drame': 4, 'probl√®me': 3, 'difficult√©': 3,
    'obstacle': 3, 'barri√®re': 3, 'blocage': 3, 'emp√™chement': 3, 'handicap': 3,
    'd√©savantage': 3, 'inconv√©nient': 3, 'nuisance': 3, 'g√™ne': 3, 'd√©rangement': 3,
    'trouble': 3, 'perturbation': 3, 'd√©sordre': 3, 'chaos': 4, 'confusion': 3,
    'd√©sorganisation': 3, 'd√©s√©quilibre': 3, 'instabilit√©': 3, 'incertitude': 3,
    'doute': 3, 'suspicion': 3, 'm√©fiance': 3, 'crainte': 3, 'peur': 3, 'angoisse': 4,
    'anxi√©t√©': 4, 'stress': 3, 'tension': 3, 'pression': 3, 'souci': 3, 'inqui√©tude': 3,
    'pr√©occupation': 3, 'tourment': 4, 'souffrance': 4, 'douleur': 4, 'mal': 3,
    'maladie': 3, 'blessure': 3, 'plaie': 3, 'cicatrice': 3, 'traumatisme': 4,
    'choc': 3, 'crise': 3, 'urgence': 3, 'danger': 4, 'risque': 3, 'menace': 4,
    'p√©ril': 4, 'perte': 3, 'manque': 3, 'absence': 3, 'vide': 3, 'trou': 3,
    'faille': 3, 'd√©faut': 3, 'faiblesse': 3, 'vuln√©rabilit√©': 3, 'fragilit√©': 3,
    'sensibilit√©': 3, 'susceptibilit√©': 3, 'irritabilit√©': 3, 'agacement': 3,
    'exasp√©ration': 4, '√©nervement': 3, 'col√®re': 4, 'fureur': 4, 'rage': 4,
    'haine': 5, 'rancune': 4, 'ressentiment': 4, 'vengeance': 4, 'revanche': 4
}

# Dictionnaire de mots positifs en fran√ßais avec leurs poids
FRENCH_POSITIVE_WORDS = {
    'amour': 5, 'adorer': 5, 'aimer': 5, 'merveilleux': 4, 'fantastique': 4, 'superbe': 4,
    'g√©nial': 4, 'excellent': 4, 'parfait': 4, 'magnifique': 4, 'splendide': 4, 'formidable': 4,
    'extraordinaire': 4, 'incroyable': 4, 'fabuleux': 4, 'merveilleux': 4, 'sublime': 4,
    'heureux': 4, 'joyeux': 4, 'content': 3, 'satisfait': 3, 'ravi': 4, 'enchant√©': 4,
    '√©merveill√©': 4, '√©bloui': 4, 'enthousiaste': 4, 'passionn√©': 4, 'passionnant': 4,
    'int√©ressant': 3, 'captivant': 4, 'fascinant': 4, 'attrayant': 3, 's√©duisant': 3,
    'charmant': 3, 'agr√©able': 3, 'plaisant': 3, 'd√©licieux': 4, 'savoureux': 3,
    'exquis': 4, 'succulent': 3, 'd√©lectable': 3, 'app√©tissant': 3, 'gourmand': 3,
    'gourmet': 3, 'gastronomique': 3, 'culinaire': 3, 'artisanal': 3, 'authentique': 3,
    'naturel': 3, 'biologique': 3, '√©cologique': 3, 'durable': 3, 'responsable': 3,
    '√©thique': 3, 'moral': 3, 'vertueux': 3, 'noble': 3, 'digne': 3, 'honorable': 3,
    'respectable': 3, 'estimable': 3, 'appr√©ciable': 3, 'valable': 3, 'valide': 3,
    'l√©gitime': 3, 'juste': 3, '√©quitable': 3, 'impartial': 3, 'objectif': 3,
    'rationnel': 3, 'logique': 3, 'coh√©rent': 3, 'pertinent': 3, 'appropri√©': 3,
    'ad√©quat': 3, 'convenable': 3, 'satisfaisant': 3, 'acceptable': 3, 'tol√©rable': 3,
    'supportable': 3, 'endurable': 3, 'durable': 3, 'stable': 3, 'solide': 3,
    'robuste': 3, 'r√©sistant': 3, 'fort': 3, 'puissant': 3, 'efficace': 3,
    'productif': 3, 'performant': 3, 'comp√©tent': 3, 'capable': 3, 'talentueux': 3,
    'dou√©': 3, 'gifted': 3, 'brillant': 4, 'intelligent': 3, 'sage': 3,
    'savant': 3, '√©rudit': 3, 'cultiv√©': 3, 'instruit': 3, '√©duqu√©': 3,
    'dipl√¥m√©': 3, 'qualifi√©': 3, 'exp√©riment√©': 3, 'professionnel': 3, 'expert': 3,
    'sp√©cialiste': 3, 'ma√Ætre': 3, 'virtuose': 4, 'g√©nie': 4, 'prodigieux': 4
}

# Dictionnaire de mots neutres en fran√ßais avec leurs poids
FRENCH_NEUTRAL_WORDS = {
    'normal': 2, 'ordinaire': 2, 'habituel': 2, 'courant': 2, 'commun': 2, 'banal': 2,
    'standard': 2, 'classique': 2, 'traditionnel': 2, 'conventionnel': 2, 'r√©gulier': 2,
    'fr√©quent': 2, 'quotidien': 2, 'journalier': 2, 'hebdomadaire': 2, 'mensuel': 2,
    'annuel': 2, 'p√©riodique': 2, 'syst√©matique': 2, 'm√©thodique': 2, 'organis√©': 2,
    'structur√©': 2, 'planifi√©': 2, 'programm√©': 2, 'pr√©vu': 2, 'anticip√©': 2,
    'attendu': 2, 'esp√©r√©': 2, 'souhait√©': 2, 'd√©sir√©': 2, 'voulu': 2,
    'choisi': 2, 's√©lectionn√©': 2, 'retenu': 2, 'adopt√©': 2, 'approuv√©': 2,
    'valid√©': 2, 'confirm√©': 2, 'certifi√©': 2, 'garanti': 2, 'assur√©': 2,
    's√©curis√©': 2, 'prot√©g√©': 2, 'conserv√©': 2, 'maintenu': 2, 'pr√©serv√©': 2,
    'gard√©': 2, 'retenu': 2, 'conserv√©': 2, 'stock√©': 2, 'archiv√©': 2,
    'enregistr√©': 2, 'sauvegard√©': 2, 'copi√©': 2, 'dupliqu√©': 2, 'reproduit': 2,
    'imit√©': 2, 'copi√©': 2, 'plagi√©': 2, 'reproduit': 2, 'dupliqu√©': 2,
    'multipli√©': 2, 'augment√©': 2, 'accru': 2, 'd√©velopp√©': 2, '√©tendu': 2,
    '√©largi': 2, 'agrandi': 2, 'aggrav√©': 2, 'intensifi√©': 2, 'renforc√©': 2,
    'consolid√©': 2, 'stabilis√©': 2, '√©quilibr√©': 2, 'harmonis√©': 2, 'coordonn√©': 2,
    'organis√©': 2, 'structur√©': 2, 'planifi√©': 2, 'programm√©': 2, 'pr√©vu': 2,
    'anticip√©': 2, 'attendu': 2, 'esp√©r√©': 2, 'souhait√©': 2, 'd√©sir√©': 2,
    'voulu': 2, 'choisi': 2, 's√©lectionn√©': 2, 'retenu': 2, 'adopt√©': 2
}

# Charger le mod√®le et le vectorizer
model = joblib.load('sentiment_model.pkl')
vectorizer = joblib.load('vectorizer.pkl')

def preprocess(text):
    # G√©rer les valeurs manquantes
    if not text:
        return ""
        
    # Convertir en minuscules
    text = text.lower()
    
    # G√©rer les contractions avec apostrophe
    text = text.replace("j'", "je ")
    text = text.replace("t'", "te ")
    text = text.replace("l'", "le ")
    text = text.replace("m'", "me ")
    text = text.replace("s'", "se ")
    text = text.replace("d'", "de ")
    text = text.replace("n'", "ne ")
    text = text.replace("c'", "ce ")
    
    # Supprimer les URLs
    text = re.sub(r'http\S+|www\S+|https\S+', '', text, flags=re.MULTILINE)
    
    # Supprimer les mentions et hashtags
    text = re.sub(r'@\w+|#\w+', '', text)
    
    # Supprimer la ponctuation sauf les apostrophes
    text = re.sub(r'[^\w\s\']', '', text)
    
    # Tokenisation
    try:
        tokens = word_tokenize(text)
    except LookupError:
        tokens = text.split()
    
    # Supprimer les stopwords et ajouter des poids aux mots selon leur sentiment
    try:
        stop_words = set(stopwords.words('french'))
        processed_tokens = []
        for word in tokens:
            if word not in stop_words:
                # Si le mot est dans un de nos dictionnaires, le r√©p√©ter selon son poids
                if word in FRENCH_NEGATIVE_WORDS:
                    weight = FRENCH_NEGATIVE_WORDS[word]
                    processed_tokens.extend([word] * weight)
                elif word in FRENCH_POSITIVE_WORDS:
                    weight = FRENCH_POSITIVE_WORDS[word]
                    processed_tokens.extend([word] * weight)
                elif word in FRENCH_NEUTRAL_WORDS:
                    weight = FRENCH_NEUTRAL_WORDS[word]
                    processed_tokens.extend([word] * weight)
                else:
                    processed_tokens.append(word)
        tokens = processed_tokens
    except LookupError:
        pass
    
    # Ne pas utiliser le stemming pour pr√©server les mots originaux
    return ' '.join(tokens)

def predict_sentiment(text):
    # Pr√©traitement
    cleaned = preprocess(text)
    # Vectorisation
    vect = vectorizer.transform([cleaned])
    # Pr√©diction
    sentiment = model.predict(vect)[0]
    # Probabilit√©s
    probabilities = model.predict_proba(vect)[0]
    return sentiment, probabilities

# Interface utilisateur
st.set_page_config(
    page_title="Analyse de Sentiment Twitter",
    page_icon="üê¶",
    layout="centered"
)

st.title("Analyse de Sentiment Twitter üê¶")

# Ajouter une description
st.markdown("""
Cette application analyse le sentiment d'un texte (tweet, commentaire, etc.) et d√©termine s'il est :
- üòä Positif
- üòê Neutre
- üòî N√©gatif

Entrez votre texte ci-dessous et cliquez sur 'Analyser' !
""")

# Zone de texte pour l'entr√©e
tweet = st.text_area(
    "Entrez votre texte :",
    height=150,
    placeholder="Exemple : Tu es vraiment m√©chant !"
)

# Bouton d'analyse
if st.button("Analyser"):
    if tweet:
        # Afficher un spinner pendant l'analyse
        with st.spinner('Analyse en cours...'):
            sentiment, probabilities = predict_sentiment(tweet)
            
            # Personnaliser l'affichage selon le sentiment
            if sentiment == "positive":
                st.success(f"Sentiment : POSITIF üòä")
            elif sentiment == "negative":
                st.error(f"Sentiment : N√âGATIF üòî")
            else:
                st.info(f"Sentiment : NEUTRE üòê")
            
            # Afficher les probabilit√©s
            st.write("---")
            st.write("**Probabilit√©s de chaque sentiment :**")
            col1, col2, col3 = st.columns(3)
            with col1:
                st.metric("Positif", f"{probabilities[2]*100:.1f}%")
            with col2:
                st.metric("Neutre", f"{probabilities[1]*100:.1f}%")
            with col3:
                st.metric("N√©gatif", f"{probabilities[0]*100:.1f}%")
            
            # Afficher le texte pr√©trait√©
            st.write("---")
            st.write("**D√©tails du traitement :**")
            st.write("Texte pr√©trait√© :", preprocess(tweet))
    else:
        st.warning("Veuillez saisir un texte d'abord.") 